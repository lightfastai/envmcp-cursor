[build-system]
requires = ["setuptools>=75.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lightfast-envmcp-cursor"
version = "0.1.0"
description = "A lightweight way to use environment variables in your Cursor MCP server definitions."
readme = "README.md"
license = "MIT"
authors = [
    {name = "Jeevan Pillay", email = "jp@jeevanpillay.com"}
]
maintainers = [
    {name = "Jeevan Pillay", email = "jp@jeevanpillay.com"}
]
keywords = ["cursor", "mcp", "mcp-server", "env", "environment", "dotenv"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
]
requires-python = ">=3.10"
dependencies = []

[dependency-groups]
dev = [
    "nox>=2024.4.15",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "coverage>=7.6.0",
    "build>=1.2.0",
]
security = [
    "safety>=3.0.0",
    "bandit[toml]>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/lightfastai/lightfast-envmcp-cursor"
Repository = "https://github.com/lightfastai/lightfast-envmcp-cursor"
Issues = "https://github.com/lightfastai/lightfast-envmcp-cursor/issues"

[project.scripts]
envmcp = "envmcp.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["envmcp*"]

[tool.setuptools.package-data]
envmcp = ["py.typed"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["envmcp"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 